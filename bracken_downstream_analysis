---
title: "phylogenize_data_cleaning"
output: html_document
date: "2023-09-14"
---

```{r setup, include=FALSE}
#library
library(testthat)
library(ape)
library(Matrix)
library(phylolm)
library(ALDEx2)
library(broom)
library(tidyverse)
library(GGally)

#################################################################
##import MIDAS2_db UHGG database:#change the path when run on a different machine 
metadata_db_uhgg <-  read.delim("C:/Users/Nia Tran/OneDrive/Desktop/metadata.tsv")
metadata_uhgg = metadata_db_uhgg %>% separate(
  col=Lineage,
  into=c("domain","phylum","class","order","family","genus","species"), 
  sep=";"
)
######if species ends wiht s__ only --> add the MGnify_accession to it and put it in the "species name"
metadata_uhgg_fixed <-metadata_uhgg %>% mutate(species_name = map2_chr(species, MGnify_accession, ~ {
    if (.x == "s__") {
      paste0("s__", .y)
    } else {
      .x
    }
  }))

#change the species name (if it shows up) from A.rectalis into A. rectale
metadata_uhgg_final=metadata_uhgg_fixed %>% mutate(species_name = str_replace(
    species_name,
    "s__Agathobacter rectalis",
    "s__Agathobacter rectale"
  ))
#####################################################################
#T2D_5 folder including all .bracken files from Snakemake/abund on OSC
bracken_file_T2D_2 <-list.files(path="C:/Users/Nia Tran/OneDrive/Desktop/T2D_2_bracken")
test_that("bracken files were found", { expect_gt(length(bracken_file_T2D_2), 0) }) #testing if the length of bracken_file_T2D is larger than 0 --> successful

bracken_data_T2D_2 <- map(bracken_file_T2D_2, ~ { read_tsv(file.path("C:/Users/Nia Tran/OneDrive/Desktop/T2D_2_bracken", .), show_col_types=FALSE) })


bracken_sample_T2D_2 <-gsub("\\.bracken","", bracken_file_T2D_2)
bracken_data_newcol_T2D_2 <- map2(bracken_data_T2D_2, bracken_sample_T2D_2, ~ { mutate(.x, sample = .y)})

bracken_data_tidy_T2D_2 <- bind_rows(bracken_data_newcol_T2D_2) 
#combine all of these dataframes into 1 big table

bracken_T2D_2_wide <- pivot_wider(bracken_data_tidy_T2D_2, names_from=sample, values_from=fraction_total_reads, id_cols=name, values_fill = 0) 
#turn all sample names (in a "sample" row) into different columns, then each column contain "fraction_total_reads" values, name of all columns is "name"

bracken_T2D_2_wide_count <- pivot_wider(bracken_data_tidy_T2D_2, names_from=sample, values_from=new_est_reads, id_cols=name, values_fill = 0)
#same thing with above,but show the newest_read instead of fraction_total_reads
#maybe just stop here =))

bracken_data_T2D_median_2 <- bracken_data_tidy_T2D_2 %>% group_by(name) %>% summarize(med_abund=median(fraction_total_reads)) %>% arrange(-med_abund)

bracken_data_tidy_T2D_2 %>% filter(name %in% bracken_data_T2D_median_2$name[1:10]) %>% distinct(name)
#also not sure why have to check in the bracken_data_tidy_T2D_5's name present in the bracken_data_T2D_median's name (from 1 to 10th row)

colnames(bracken_T2D_2_wide_count)

env_T2D_2=metadata_phylo_file %>% slice(c(1051:1195)) %>% select(sample,env) %>% rename("Run"="sample") %>% rename("Status"="env")

#######################################################################
#######################################################################
#######################################################################Running models on abundance:
###you need a metadata (Run vs species_id) ---"fixed_tbl"
###you need a condition string (conditions for each of the Run) ---"condition_5_new"
###you need a table with 3 columns (=3 conditions) containing sum of abundance for each of condition ---"combine_abd"

##################making "fixed_tbl_t2d_2"
bracken_T2D_2_wide_count #ERR260132 --> ERR275252
tmp_df_2=bracken_T2D_2_wide_count %>% pivot_longer(!name, names_to="Run", values_to = "abundance")
tmp_df_2_env=inner_join(tmp_df_2, env_T2D_2, by="Run") %>% dplyr::select(Run, abundance, Status, name)
tbl_t2d_2=tmp_df_2_env %>% dplyr::select(!Status)%>% pivot_wider(names_from="Run", values_from = "abundance")
fixed_tbl_t2d_2=tbl_t2d_2 %>% remove_rownames %>% column_to_rownames(var="name")

##################making and "combine_abd_t2d_2":
condition_2_new=env_T2D_2$Status
met_neg=""
met_pos=""
nd=""
e=sapply(condition_2_new, function(x) ifelse(x=="T2D metformin-",paste(met_neg,1), paste(met_neg,0)))
f=sapply(condition_2_new, function(x) ifelse(x=="T2D metformin+",paste(met_pos,1), paste(met_pos,0)))
g=sapply(condition_2_new, function(x) ifelse(x=="ND CTRL",paste(nd,1), paste(nd,0)))

combine_abd_t2d_2=data.frame(e) %>% cbind(data.frame(f)) %>% cbind(data.frame(g)) %>% rename("met_neg"="e") %>% rename("met_pos"="f") %>% rename("ctrl"="g") %>% select(met_neg,ctrl)

#################running aldex model:
mm_2=model.matrix(~met_neg+ctrl, combine_abd_t2d_2)
x_2 <- aldex.clr(fixed_tbl_t2d_2, mm_2, mc.samples=4, denom="all", verbose=F)
glm_t2d_2 <- aldex.glm(x_2, mm_2)
View(glm_t2d_2)
colnames(glm_t2d_2)

##################obtain the species that have good pvals with:
fixed_pval_t2d_2=glm_t2d_2 %>% rename("met_neg_pval"="met_neg 1:pval") %>% rename("intercept_pval"="Intercept::pval") %>% rename("ctrl_pval"="ctrl 1:pval") %>% select(intercept_pval, met_neg_pval, ctrl_pval)

significant_met_neg_pval_t2d_2=fixed_pval_t2d_2 %>% select(met_neg_pval)
significant_ctrl_pval_t2d_2=fixed_pval_t2d_2 %>% select(ctrl_pval)

###################
#size effect of the model- Effect size tells you how meaningful the relationship between variables or the difference between groups is. larger effect size = research finding has better practical significance:
glm_effect_t2d_2 <- aldex.glm.effect(x_2)

#histogram for pval frequency:
library(ggplot2)

ggplot(fixed_pval_t2d_2, aes(x=met_neg_pval))+
  geom_histogram(color="black") +
  labs(y="p-vals distribution",x="metformin treatment")
ggsave("met_neg_histogram_t2d2.pdf")

ggplot(fixed_pval_t2d_2, aes(x=ctrl_pval))+
  geom_histogram(color="black") +
  labs(y="significant p-vals distribution", x="environment")
ggsave("ctrl_pval_histogram_t2d2.pdf")

#aldex.glm.plot(glm_t2d_5, eff=glm_effect_t2d_5, contrast="met_neg", type="MW", test="fdr")

#INTERPRETING ALDEX OUTPUT:
#output three df, 1 for each condition "met_neg", "met_pos", "ctrl"
#for each of the 3 conditions above:
#rab.all: median clr value of glm test
#rab.win.0: median clr value for 0 sample
#rab.win.1: median clr value for 1 sample
#diff.btw:median difference in clr values between 0 and 1 groups
#diff.win: median of the largest different in clr values within 0 and 1 groups
#effect: median effect size = diff.btw/max(diff.win) for all instances
#overlap: proportion of effect size that overlaps 0 (0 is no effect)

###############making volcano plot for glm.effect:
aldex.plot(glm_effect_t2d_2[["met_neg 1"]],test="effect", cutoff=2, all.col='blue')
aldex.plot(glm_effect_t2d_2[["ctrl 1"]], test="effect",cutoff=2, all.col="purple")
#for significant p-values (plot on met_neg 1, ctrl, met_pos 1)
#rab.win.0: median clr value for 0 sample
#rab.win.1: median clr value for 1 sample
###############

####copy from t2d_5:
###############making volcano plot for glm.effect:
fixed_pval_t2d_2_met_neg=fixed_pval_t2d_2
final_t2d_2_neg=fixed_pval_t2d_2_met_neg %>% mutate(significance=case_when( fixed_pval_t2d_2_met_neg$pval<0.05 & fixed_pval_t2d_2_met_neg$effect > 0.5 ~"pval and effect significant", fixed_pval_t2d_2_met_neg$pval<0.05 &fixed_pval_t2d_2_met_neg$effect < -0.5 ~"pval and effect significant", fixed_pval_t2d_2_met_neg$pval<0.05 ~ "pval significant")) %>% rownames_to_column(var="species_names")

final_t2d_5_vol_plot_neg=ggplot(final_t2d_5_neg, aes(x=effect, y=-log10(pval), col=significance, text=paste("species:",species_names))) + 
  geom_vline(xintercept = c(-0.5,0.5), col="black", linetype="dashed") +
  geom_hline(yintercept = c(1.3), col="black", linetype="dashed") + 
  geom_point(alpha=(0.7))

ggplotly(final_t2d_5_vol_plot_neg)

final_t2d_5_pos=fixed_pval_t2d_5_met_pos %>% mutate(significance=case_when( fixed_pval_t2d_5_met_pos$pval<0.05 & fixed_pval_t2d_5_met_pos$effect > 0.5 ~"pval and effect significant", fixed_pval_t2d_5_met_pos$pval<0.05 &fixed_pval_t2d_5_met_pos$effect < -0.5 ~"pval and effect significant", fixed_pval_t2d_5_met_pos$pval<0.05 ~ "pval significant")) %>% rownames_to_column(var="species_names")

final_t2d_5_vol_plot_pos=ggplot(final_t2d_5_pos, aes(x=effect, y=-log10(pval), col=significance, text=paste("species:",species_names))) + 
  geom_vline(xintercept = c(-0.5,0.5), col="black", linetype="dashed") +
  geom_hline(yintercept = c(1.3), col="black", linetype="dashed") + 
  geom_point(alpha=(0.7))

ggplotly(final_t2d_5_vol_plot_pos)
############looking at the species that have both significance:
species_t2d_5_neg=final_t2d_5_neg %>% filter(significance=="pval and effect significant")
species_t2d_5_pos=final_t2d_5_pos %>% filter(significance=="pval and effect significant")
#no overlapping in significant species:
species_t2d_5_neg$species_names
species_t2d_5_pos$species_names

###############
###met_neg 1:
sig_t2d_2=glm_t2d_2 <0.05
plot(glm_effect_t2d_2[["met_neg 1"]]$diff.win[sig_t2d_2],
       glm_effect_t2d_2[["met_neg 1"]]$diff.btw[sig_t2d_2], ylab="difference in clr values between presence and absence groups", xlab="largest difference in clr values within presence and absence groups", cex.lab=0.75, title("metformin negative"), col='blue')


sig_t2d_2_larger=glm_t2d_2 <0.2
plot(glm_effect_t2d_2[["met_neg 1"]]$diff.win[sig_t2d_2_larger],
     glm_effect_t2d_2[["met_neg 1"]]$diff.btw[sig_t2d_2_larger],ylab="difference in clr values between presence and absence groups", xlab="largest difference in clr values within presence and absence groups", cex.lab=0.75, title("metformin negative_larger_pval_cutoff"), col='blue')


###met_pos 1:
plot(glm_effect_t2d_2[["met_pos 1"]]$diff.win[sig_t2d_2],
     glm_effect_t2d_2[["met_pos 1"]]$diff.btw[sig_t2d_2],ylab="difference in clr values between presence and absence groups", xlab="largest difference in clr values within presence and absence groups",cex.lab=0.75, title("metformin positive"), col="red")


plot(glm_effect_t2d_2[["met_pos 1"]]$diff.win[sig_t2d_2_larger],
     glm_effect_t2d_2[["met_pos 1"]]$diff.btw[sig_t2d_2_larger],ylab="difference in clr values between presence and absence groups", xlab="largest difference in clr values within presence and absence groups",cex.lab=0.75, title("metformin positive larger_pval_cutoff"), col="red")
ggsave("met_pos_effect_diagnosis_old_formula_t2d2.pdf")
###ctrl:
plot(glm_effect_t2d_2[["ctrl 1"]]$diff.win[sig_t2d_2],
     glm_effect_t2d_2[["ctrl 1"]]$diff.btw[sig_t2d_2], ylab="difference in clr values between presence and absence groups", xlab="largest difference in clr values within presence and absence groups",cex.lab=0.75, title("control"), col="purple")
ggsave("ctrl_effect_diagnosis_old_formula_t2d2.pdf")

plot(glm_effect_t2d_2[["ctrl 1"]]$diff.win[sig_t2d_2_larger],
     glm_effect_t2d_2[["ctrl 1"]]$diff.btw[sig_t2d_2_larger],ylab="difference in clr values between presence and absence groups", xlab="largest difference in clr values within presence and absence groups",cex.lab=0.75, title("control larger pval cutoff"), col="purple")


##############################################
#volcano plot (met_neg_1)

ctrl_effect_pval=glm_effect_t2d_2[["ctrl 1"]]$effect %>% data.frame() %>% rename("ctrl_effect"=".") %>% cbind(fixed_pval_t2d_2) %>% select(ctrl_pval,ctrl_effect) %>% mutate(log_ctrl=-log10(ctrl_pval)) %>% mutate(category=ifelse(ctrl_effect>0 & ctrl_pval <0.05, 'significant','not_significant'))

neg_effect_pval=glm_effect_t2d_2[['met_neg 1']]$effect %>% data.frame() %>% rename("met_neg_effect"=".") %>% cbind(fixed_pval_t2d_2) %>% select(met_neg_effect, met_neg_pval) %>% mutate(log_met_neg=-log10(met_neg_pval)) %>% mutate(category=ifelse(met_neg_effect>0 & met_neg_pval <0.05, 'significant','not_significant'))

sig_neg_treatment=neg_effect_pval %>% filter(category=="significant")
sig_env=ctrl_effect_pval %>% filter(category=="significant")
sig_neg_treatment
sig_env
##add dashed line for threshold or use ggplotly for interactive graph

ggplot(data=ctrl_effect_pval, aes(x=ctrl_effect, y=-log10(ctrl_pval), col=category)) + 
  geom_vline(xintercept=0, col='red', linetype='dashed') +
  geom_hline(yintercept=-log10(0.05), col="red", linetype='dashed') +
  geom_point(size=2) + 
  scale_color_manual(values=c("#66CC99", "#FF9999"),
                     labels=c("not_significant","significant")) +
  labs(y="-log10(pval)", x="environment size effect") + theme_bw(9) +
  theme(legend.position="none")


ggsave("diagnosis_ctrl_old_formula_t2d2_fixed.pdf")

ggsave("color_metformin_t2d2_fixed.pdf")
##making an interactive volcano plot: same thing but just fancier LOL =)))

options("install.lock"=FALSE)
install.packages('plotly', dependencies=TRUE, INSTALL_opts = '--no-lock')
library(plotly)
install.packages("manhattanly")
library(manhattanly)

df_ctrl_vol=glm_effect_t2d_2[["ctrl 1"]]$effect %>% data.frame() %>% rename("ctrl_effect"=".") %>% cbind(fixed_pval_t2d_2) %>% select(ctrl_pval,ctrl_effect)

vol_ob_ctr=volcanor(df_ctrl_vol, p="ctrl_pval", effect_size="ctrl_effect")

vol_interactive_ctrl=volcanoly(vol_ob_ctr, col="#8080ff", point_size = 5, effect_size_line=c(-0.6,0.6), effect_size_line_color = "grey", effect_size_line_width = 0.5, effect_size_line_type="dash", genomewideline=-log10(1e-05), genomewideline_width = 0.5, genomewideline_type="dash",highlight=NULL, highlight_color = "red", xlab=NULL, ylab="-log10(p)", title="Environment Volcano Plot")

htmlwidgets::saveWidget(as_widget(vol_interactive_ctrl), "index.html")

df_met_neg_vol=glm_effect_t2d_2[['met_neg 1']]$effect %>% data.frame() %>% rename("met_neg_effect"=".") %>% cbind(fixed_pval_t2d_2) %>% select(met_neg_effect, met_neg_pval)

vol_ob_neg_met=volcanor(df_met_neg_vol, p="met_neg_pval", effect_size="met_neg_effect")
volcanoly(vol_ob_neg_met, col="#FA8072",  point_size = 5, effect_size_line=c(-0.8,0.8), effect_size_line_color = "grey", effect_size_line_width = 0.5, effect_size_line_type="dash", genomewideline=-log10(1e-05), genomewideline_width = 0.5, genomewideline_type="dash",highlight=NULL, highlight_color = "red", xlab=NULL, ylab="-log10(p)", title="Metformin Treatment Volcano Plot")





``` 








